<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd" id="WebApp_ID" version="4.0">



<!-- 

	# web.xml
	
	아파치 톰캣의 Web Server에 현재 웹 애플리케이션에 대한 정보를 전달하는 설정 파일
	
	웹서버를 시작할 때 이곳의 설정을 서버애 등록된 해당 애플리케이션 초기화에 사용한다.(그니까 서버를 재시작해야 이곳의 내용이 새로 동작 되것지)
	
-->





  <display-name>chap03</display-name>
  <!-- 기본 주소로 접속했을 떄 보여주는 페이지를 설정. 주소를 http://localhost:8888/chap03/로 입력해야 됨 -->
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.jsp</welcome-file>
    <welcome-file>default.htm</welcome-file>
	<welcome-file>/WEB-INF/index.jsp</welcome-file>
  </welcome-file-list>
  
  
  
  
  
  
  
  <!-- 
  
  	<servlet>을 통해 해당 앱에서 사용할 서블릿(.java, .jsp) 들을 직접 등록할 수 있다.
  
   -->
  
    
  <servlet>
  	<servlet-name>HelloServlet</servlet-name> 
  	<servlet-class>chap03.servlet.HelloServlet</servlet-class>
  </servlet>
  
  <servlet>
  	<servlet-name>encodingTest</servlet-name> <!-- 클래스 이름과 서블릿 이름은 달라도 됨! -->
  	<servlet-class>chap03.servlet.EncodingTestServlet</servlet-class>
  </servlet>
  
  
  <!-- JSP파일 등록은 servlet태그로 한다 -->
  <servlet>
  	<servlet-name>index</servlet-name>
  	<jsp-file>/WEB-INF/index.jsp</jsp-file> <!-- jsp파일 등록 시에는 <jsp-file>태그를 이용하고 패키지 경로가 아닌 webapp 밑에 경로를 그대로 입력 -->
  </servlet>
  
  
  <servlet>
  	<servlet-name>else</servlet-name>
  	<servlet-class>chap03.servlet.ElseServlet</servlet-class>
  </servlet>
  
  <!-- 
  
  # <servlet-mapping>을 통해 등록한 서블릿에 접근할 수 있는 URL을 등록할 수 있다.   
  -url-pattern에는*를 활용할 수 있다.
  -하나의 서블릿에 여러개의 url을 매핑할 수 있다.
  
  - / 만 적는 매핑은 else의 역할을 한다. ★★★★★★★
  
  -->
  
  <servlet-mapping>
  	<servlet-name>HelloServlet</servlet-name>
  	<url-pattern>/hello</url-pattern>
  </servlet-mapping>
  
  
  <servlet-mapping>
  	<servlet-name>HelloServlet</servlet-name>
  	<url-pattern>/hello/*</url-pattern>
  </servlet-mapping>
  
  
  <servlet-mapping>
  	<servlet-name>HelloServlet</servlet-name>
  	<url-pattern>*.hello</url-pattern> <!-- chap03에 abc.hello하면 이동 가능 -->
  </servlet-mapping>

	<!-- 이렇게까지도 할 수 있다는 걸 보여주는 거지 꼭 이렇게 해라 는 아님 아 나 외 안되 -->
  <servlet-mapping>
  	<servlet-name>index</servlet-name>
  	<url-pattern>/index</url-pattern>
  </servlet-mapping>
  
  
  <servlet-mapping>
  	<servlet-name>index</servlet-name>
  	<url-pattern>*.index</url-pattern>
  </servlet-mapping>
  
  
  
  <!-- / : web.xml이 어떤 매핑에도 해당하지 않는 경우(else역할) -->
  <servlet-mapping>
  	<servlet-name>else</servlet-name>
  	<url-pattern>/</url-pattern>
  </servlet-mapping>
  
  
  <!-- 
  	초기화 파라미터 (Init Parameter)
  	
  	- 웹서버를 시작하는 시점에 해당 웹 애플리케이션에서 사용할 변수들을 초기화 하는 것
  	(서버를 키면서 초기화 되는 변수들) 
  	- 모든 서블릿에서 사용할 수 잇는 전역 초기화 파라미터(context-param)와
  	  특정 서블릿에서만 사용할 수 있는 초기화 파라미터(init-param)가 있다.
  	  
  	-    
   -->
  
  
  
  <!-- context-param: 모든 서블릿(즉 서버 전체) 에서 접근할 수 있는 초기화 파라미터 -->
  <context-param>
  	<param-name>pub_date</param-name>
  	<param-value>2022.07.22</param-value>
  </context-param>
  
  <context-param>
  	 <param-name>developer</param-name>
  	<param-value>gaeddongkim</param-value>
  </context-param>
  
  
  
  <!-- init-param은 해당 서블릿에서만 사용할 수 있는 초기화 파라미터 -->
  <servlet>
  	<servlet-name>initParamTest</servlet-name>
  	<servlet-class>chap03.servlet.InitParamTestServlet</servlet-class>
  	<init-param>
  		<param-name>user</param-name>
  		<param-value>hr</param-value>
  	</init-param>
  	  	<init-param>
  		<param-name>password</param-name>
  		<param-value>1234</param-value>
  	</init-param>
  </servlet>
  
  
  <servlet-mapping>
  	<servlet-name>initParamTest</servlet-name>
  	<url-pattern>/init</url-pattern>
  </servlet-mapping>
  
  
  
  
  
  
  
  
  
  
  
  
  
  <!-- views폴더 수업 내용 -->
  <servlet>
	<servlet-name>mainServlet</servlet-name>  
  	<servlet-class>chap03.servlet.MainServlet</servlet-class>
  </servlet>
  
	<servlet-mapping>
		<servlet-name>mainServlet</servlet-name>
		<url-pattern>/main/*</url-pattern>
	</servlet-mapping>
  

  
</web-app>